DELETE FROM fuel_brands;
DELETE FROM stations;
DELETE FROM station_brands;
DELETE FROM users;

ALTER SEQUENCE hibernate_sequence RESTART WITH 1

ALTER TABLE stations ADD CONSTRAINT "FK_brand_id" FOREIGN KEY (brand_id)
      REFERENCES public.station_brands (id) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE CASCADE

//vypise pocet jednotlivych stanic podla znacky
SELECT brand, count(*) FROM stations s
JOIN station_brands sb ON s.brand_id = sb.id
GROUP BY brand;

//update riadku
UPDATE users SET name = 'Marcus', surname = 'Revajovic' WHERE username = 'mrevaj';

//ziskanie priemerneho hodnotenia
SELECT avg(rate) FROM ratings r
JOIN stations s ON r.station_id = s.id
WHERE station_id = 4202;

//vyber stanic ktore maju hodnotenie vacsie ako X
SELECT DISTINCT  s.id, location, brand_id, city_id FROM ratings r
JOIN stations s ON r.station_id = s.id
WHERE r.rate > X

//full najoinovanie tabuliek to viewu
SELECT s.id, s.location, sb.brand, ft.fuel_type, fb.fuel_brand, fb.description FROM stations s
FULL OUTER JOIN station_brands sb ON s.brand_id = sb.id
FULL JOIN offers o ON o.station_id = s.id
FULL JOIN fuels f ON o.fuel_id = f.id
FULL JOIN fuel_types ft ON f.fuel_type_id = ft.id
FULL JOIN fuel_brands fb ON f.fuel_brand_id = fb.id